/**
 * Script para gerar arquivos de contribui√ß√£o de badge + atualizar README geral
 * Comunidade C√≥digo Certo Coders
 *
 * Uso:
 *  node gerarBadge.js --user=usuarioGitHub --nome="Nome Completo" --repo="linkRepo" --video="linkVideo"
 */

const fs = require('fs');
const path = require('path');

// --- Captura dos argumentos CLI ---
const args = process.argv.slice(2).reduce((acc, arg) => {
  const [key, value] = arg.split('=');
  acc[key.replace('--', '')] = value;
  return acc;
}, {});

// --- Valida√ß√£o ---
if (!args.user || !args.nome || !args.repo || !args.video) {
  console.error("‚ùå Erro: Informe --user, --nome, --repo e --video.");
  process.exit(1);
}

// --- Caminhos ---
const contributionsDir = path.join(__dirname, 'badges', 'contributions');
const generalReadmePath = path.join(__dirname, 'badges', 'README.md');
const fileName = `${args.user}-badge.oncomanda.md`;
const filePath = path.join(contributionsDir, fileName);

// --- Template do arquivo individual ---
const contributionContent = `# üèÖ Badge OnComanda Developer

Arquivo de contribui√ß√£o referente ao desafio **OnComanda** conclu√≠do por este membro da comunidade **C√≥digo Certo Coders**.  

---

## üìõ Identifica√ß√£o do Membro
- **Usu√°rio GitHub:** \`${args.user}\`  
- **Nome:** ${args.nome}  
- **Projeto entregue:** [Reposit√≥rio OnComanda](${args.repo})  
- **V√≠deo de demonstra√ß√£o:** [Assistir v√≠deo](${args.video})  

---

## üéØ Crit√©rios Atendidos
- [x] Reposit√≥rio p√∫blico no GitHub chamado \`OnComanda\` com frontend, monitor e admin.  
- [x] README contendo instru√ß√µes de instala√ß√£o e uso.  
- [x] V√≠deo de at√© 5 minutos mostrando o sistema rodando e seus fluxos principais.  
- [x] Demonstra√ß√£o clara de funcionalidades: abrir comanda, lan√ßar pedido, monitorar preparo e relat√≥rio simples.  

---

## üßæ Valida√ß√£o da Equipe
Este membro demonstrou capacidade de:  
1. **Construir um sistema funcional e vend√°vel** em WEB.  
2. Aplicar boas pr√°ticas de desenvolvimento e documenta√ß√£o.  
3. Entregar um produto real que resolve problemas de bares e restaurantes.  

---

## üñºÔ∏è Badge Recebido
![Badge OnComanda](../oncomanda_badge.svg)

---

## üéñÔ∏è Reconhecimento
O membro \`${args.user}\` est√° oficialmente certificado como **OnComanda Developer** dentro da Comunidade **C√≥digo Certo Coders**.  

---
‚ú® _Comunidade C√≥digo Certo Coders ‚Äì Reconhecendo quem transforma conhecimento em resultado real._
`;

// --- Cria√ß√£o da pasta se n√£o existir ---
fs.mkdirSync(contributionsDir, { recursive: true });

// --- Escrita do arquivo individual ---
fs.writeFileSync(filePath, contributionContent, 'utf-8');
console.log(`‚úÖ Arquivo de contribui√ß√£o criado: ${filePath}`);

// --- Atualizar README geral ---
let readmeContent = '';
if (fs.existsSync(generalReadmePath)) {
  readmeContent = fs.readFileSync(generalReadmePath, 'utf-8');
} else {
  readmeContent = `# üèÖ Contribui√ß√µes - Badge OnComanda Developer

Lista oficial de membros da Comunidade **C√≥digo Certo Coders** que conclu√≠ram o **Desafio OnComanda**.  

| Usu√°rio GitHub | Nome | Reposit√≥rio | V√≠deo | Badge |
|----------------|------|-------------|-------|-------|
`;
}

// --- Linha do novo participante ---
const newLine = `| [${args.user}](https://github.com/${args.user}) | ${args.nome} | [Reposit√≥rio](${args.repo}) | [V√≠deo](${args.video}) | ![Badge](./oncomanda_badge.svg) |`;

// --- Verifica se j√° existe ---
if (!readmeContent.includes(args.user)) {
  readmeContent += `\n${newLine}`;
  fs.writeFileSync(generalReadmePath, readmeContent, 'utf-8');
  console.log(`‚úÖ README geral atualizado em: ${generalReadmePath}`);
} else {
  console.log("‚ÑπÔ∏è Usu√°rio j√° consta no README geral, nenhuma atualiza√ß√£o feita.");
}
/*
üìå **O que esse script faz agora:**

1. Cria automaticamente o arquivo de contribui√ß√£o individual em `badges/contributions/`.
2. Atualiza (ou cria se n√£o existir) o `badges/README.md` com uma tabela geral listando todos os membros que conclu√≠ram o **Desafio OnComanda**.
3. Garante que um usu√°rio n√£o seja duplicado no README.

Exemplo de execu√ß√£o:

```bash
node gerarBadge.js --user=joaosilva --nome="Jo√£o da Silva" --repo="https://github.com/joaosilva/OnComanda" --video="https://youtu.be/xxxxx"
```

Resultado esperado no `badges/README.md`:

| Usu√°rio GitHub                            | Nome          | Reposit√≥rio                                           | V√≠deo                           | Badge                           |
| ----------------------------------------- | ------------- | ----------------------------------------------------- | ------------------------------- | ------------------------------- |
| [joaosilva](https://github.com/joaosilva) | Jo√£o da Silva | [Reposit√≥rio](https://github.com/joaosilva/OnComanda) | [V√≠deo](https://youtu.be/xxxxx) | ![Badge](./oncomanda_badge.svg) |

---
*/